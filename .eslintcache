[{"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\index.js":"1","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\reportWebVitals.js":"2","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\App.js":"3","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\pages\\HomePage.js":"4","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\pages\\Account.js":"5","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\pages\\SearchPage.js":"6","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\constants\\theme.js":"7","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledApp.js":"8","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\pages\\NominationsPage.js":"9","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\pages\\MoviePage.js":"10","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\Badge.js":"11","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\Nofications.js":"12","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\context\\index.js":"13","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\MoviesSkeleton.js":"14","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledHomePage.js":"15","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\Movie.js":"16","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\NetError.js":"17","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\context\\NominationContext.js":"18","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\PageLayout.js":"19","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\Nomination.js":"20","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledMoviePage.js":"21","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledSearchPage.js":"22","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledBadge.js":"23","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledNominationsPage.js":"24","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\services\\movies-services.js":"25","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledNotifications.js":"26","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\context\\NotificationContext.js":"27","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\Notification.js":"28","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledMoviesSkeleton.js":"29","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledNetError.js":"30","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\constants\\notification-type.js":"31","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\constants\\general.js":"32","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledPageLayout.js":"33","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledNomination.js":"34","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledMovie.js":"35","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\utils\\styled-utils.js":"36","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledNotification.js":"37","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\svg\\index.js":"38"},{"size":517,"mtime":1610939408699,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1610939408803,"results":"41","hashOfConfig":"40"},{"size":2288,"mtime":1610939408636,"results":"42","hashOfConfig":"40"},{"size":3389,"mtime":1610939408702,"results":"43","hashOfConfig":"40"},{"size":394,"mtime":1610939408702,"results":"44","hashOfConfig":"40"},{"size":3864,"mtime":1610939408801,"results":"45","hashOfConfig":"40"},{"size":166,"mtime":1610939408694,"results":"46","hashOfConfig":"40"},{"size":355,"mtime":1610939408829,"results":"47","hashOfConfig":"40"},{"size":2634,"mtime":1610939408738,"results":"48","hashOfConfig":"40"},{"size":6322,"mtime":1610939408716,"results":"49","hashOfConfig":"40"},{"size":523,"mtime":1610939408639,"results":"50","hashOfConfig":"40"},{"size":1103,"mtime":1610939408686,"results":"51","hashOfConfig":"40"},{"size":432,"mtime":1610939408697,"results":"52","hashOfConfig":"40"},{"size":921,"mtime":1610939408684,"results":"53","hashOfConfig":"40"},{"size":1114,"mtime":1610939408832,"results":"54","hashOfConfig":"40"},{"size":2482,"mtime":1610939408682,"results":"55","hashOfConfig":"40"},{"size":890,"mtime":1610939408685,"results":"56","hashOfConfig":"40"},{"size":2152,"mtime":1610939408695,"results":"57","hashOfConfig":"40"},{"size":2035,"mtime":1610939408689,"results":"58","hashOfConfig":"40"},{"size":1658,"mtime":1610939408687,"results":"59","hashOfConfig":"40"},{"size":3793,"mtime":1610939408838,"results":"60","hashOfConfig":"40"},{"size":1691,"mtime":1610939408879,"results":"61","hashOfConfig":"40"},{"size":290,"mtime":1610939408831,"results":"62","hashOfConfig":"40"},{"size":974,"mtime":1610939408872,"results":"63","hashOfConfig":"40"},{"size":710,"mtime":1610939408807,"results":"64","hashOfConfig":"40"},{"size":384,"mtime":1610939408874,"results":"65","hashOfConfig":"40"},{"size":1300,"mtime":1610939408696,"results":"66","hashOfConfig":"40"},{"size":2265,"mtime":1610939408688,"results":"67","hashOfConfig":"40"},{"size":396,"mtime":1610939408839,"results":"68","hashOfConfig":"40"},{"size":481,"mtime":1610939408839,"results":"69","hashOfConfig":"40"},{"size":127,"mtime":1610939408693,"results":"70","hashOfConfig":"40"},{"size":40,"mtime":1610939408692,"results":"71","hashOfConfig":"40"},{"size":1793,"mtime":1610939408878,"results":"72","hashOfConfig":"40"},{"size":895,"mtime":1610939408868,"results":"73","hashOfConfig":"40"},{"size":1116,"mtime":1610939408836,"results":"74","hashOfConfig":"40"},{"size":489,"mtime":1610939408886,"results":"75","hashOfConfig":"40"},{"size":366,"mtime":1610939408873,"results":"76","hashOfConfig":"40"},{"size":1308,"mtime":1610939408881,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"dwyg6s",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\index.js",[],["167","168"],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\reportWebVitals.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\App.js",["169"],"import React from 'react';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport theme from './constants/theme';\r\nimport AppContext from './context';\r\nimport HomePage from './pages/HomePage';\r\nimport MoviePage from './pages/MoviePage';\r\nimport NominationsPage from './pages/NominationsPage';\r\nimport StyledApp from './styled/StyledApp';\r\nimport axios from 'axios';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport SearchPage from './pages/SearchPage';\r\nimport Notifcations from './components/Nofications';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport Badge from './components/Badge';\r\nimport AccountPage from './pages/Account';\r\n\r\nconst queryClient = new QueryClient();\r\nfunction App() {\r\n  const [show,set] = React.useState(false);\r\n\r\n  React.useEffect(()=>{\r\n    let timeout = null;\r\n    if(show){\r\n        timeout = setTimeout(()=>{\r\n          set(false)\r\n        },2000)\r\n    }\r\n    return ()=>{\r\n      timeout && clearTimeout(timeout);\r\n    }\r\n  },[show])\r\n\r\n  const props = useSpring({  transform: show ? 'transformY(10px) scale(1)':'transformY(10px) scale(0)', opacity: show ? 1 : 0})\r\n\r\n  return (\r\n      <QueryClientProvider client = { queryClient }>\r\n        <ThemeProvider theme = {theme}>\r\n          <StyledApp>\r\n              <AppContext showBadge = {()=>set(true)}>\r\n                <Router>\r\n                  <Switch>\r\n                    <Route exact path = '/' component = {HomePage}/>\r\n                    <Route path = '/nominations' component = {NominationsPage}/>\r\n                    <Route path = '/search' component = {SearchPage}/>\r\n                    <Route path = '/account' component = {AccountPage}/>\r\n                    <Route path = '/movie/:id' component = {MoviePage}/>\r\n                  </Switch>\r\n                </Router>\r\n                <Notifcations/>\r\n                {\r\n                  show && (\r\n                    <animated.div className = \"badge\" style = {props}>\r\n                      <Badge/>\r\n                    </animated.div>\r\n                  )\r\n                }\r\n              </AppContext>\r\n          </StyledApp>\r\n        </ThemeProvider>\r\n      </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\pages\\HomePage.js",["170"],"import React from 'react';\r\nimport { Search } from 'react-feather';\r\nimport { useQuery } from 'react-query';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Movie from '../components/Movie';\r\nimport MoviesSkeleton from '../components/MoviesSkeleton';\r\nimport PageLayout from '../components/PageLayout';\r\nimport { MovieServices } from '../services/movies-services';\r\nimport StyledHomePage from '../styled/StyledHomePage';\r\nimport NetError from '../components/NetError';\r\n\r\nconst randomMoviesKeys = ['the am', 'very', 'dam', 'pet', 'sam', 'play'];\r\n\r\nconst HomePage = () => {\r\n    const [customError, setError] = React.useState({\r\n        error: false,\r\n        message: false\r\n    })\r\n    const { isLoading, isError, data: response, refetch } = useQuery(\r\n    'movies', \r\n    ()=>MovieServices.fetchMovies(randomMoviesKeys[Math.floor(Math.random() * randomMoviesKeys.length)])\r\n    );\r\n    const history = useHistory();\r\n    const goToSearchPage = React.useCallback(()=>{\r\n        history.push('/search')\r\n    },[]);\r\n\r\n    let movies = React.useMemo(()=>{\r\n        if(!response) return [];\r\n        if(response.data.Response === 'False'){\r\n            setError({\r\n                error: true,\r\n                message: response.data.Error || 'Something went wrong'\r\n            })\r\n            return [];\r\n        };\r\n        setError({\r\n            error: false,\r\n            message: ''\r\n        })\r\n        return response.data.Search\r\n    },[response]);\r\n\r\n\r\n    return ( \r\n        <PageLayout>\r\n            <StyledHomePage className =\"flex flex-col\">\r\n                <header className = \"flex items-center justify-between flex-shrink-0\">\r\n                    <h1>\r\n                        Movies\r\n                    </h1>\r\n                    <div>\r\n                        <button\r\n                        onClick = {goToSearchPage} \r\n                        className = \"border-none centered cursor-pointer\">\r\n                            <Search/>\r\n                        </button>\r\n                    </div>\r\n                </header>\r\n                <div className = \"flex-grow main  h-full\">\r\n                    {\r\n                        isError ?\r\n                        <div>\r\n                            <NetError reloadFn = {refetch}/>\r\n                        </div>:\r\n                        customError.error ?\r\n                        <div>\r\n                            <div className = \"c-error\">\r\n                                { customError.message }\r\n                            </div>\r\n                        </div>:\r\n                        isLoading ?\r\n                        <div className = \"loading\">\r\n                            <MoviesSkeleton/>\r\n                        </div>:\r\n                        <div className = \"MovieList h-full\">\r\n                            {\r\n                                movies.map((movie,index)=>\r\n                                    <div  \r\n                                    key = { `${ movie.imdbID }-${index}` } \r\n                                    >\r\n                                        <Movie movie = {movie}/>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </StyledHomePage>\r\n        </PageLayout>\r\n    );\r\n}\r\n \r\nexport default HomePage;","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\pages\\Account.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\pages\\SearchPage.js",["171","172"],"import React from 'react';\r\nimport { Award, Search } from 'react-feather';\r\nimport { useQuery } from 'react-query';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Movie from '../components/Movie';\r\nimport MoviesSkeleton from '../components/MoviesSkeleton';\r\nimport { useNominationContext } from '../context/NominationContext';\r\nimport { MovieServices } from '../services/movies-services';\r\nimport StyledSearchPage from '../styled/StyledSearchPage';\r\n\r\nconst SearchPage = () => {\r\n    const [searchQuery,setSearchQuery] = React.useState(\"\");\r\n    const { nominations } = useNominationContext();\r\n    const [customError, setError] = React.useState({\r\n        error: false,\r\n        message: false\r\n    })\r\n\r\n    const history = useHistory();\r\n\r\n    const { isLoading, data:response, isError } = useQuery(\r\n        ['movies-title', searchQuery], \r\n        ()=>MovieServices.fetchMoviesByTitle(searchQuery),\r\n        {\r\n            enabled: searchQuery.length > 1\r\n        }\r\n    )\r\n\r\n    const handleSearchChange = React.useCallback((event)=>{\r\n        const value = event.target.value;\r\n        setSearchQuery(value)\r\n    },[searchQuery]);\r\n\r\n    const toNominationPage = React.useCallback(()=>{\r\n        history.push('/nominations');\r\n    },[])\r\n\r\n    const movies = React.useMemo(()=>{\r\n        if(!response) return [];\r\n        if(response.data.Response === 'False'){\r\n            setError({\r\n                error: true,\r\n                message: response.data.Error || 'Something went wrong'\r\n            })\r\n            return [];\r\n        };\r\n        setError({\r\n            error: false,\r\n            message: ''\r\n        })\r\n        return response.data.Search\r\n    },[response])\r\n\r\n    return ( \r\n        <StyledSearchPage className = \"flex flex-col\">\r\n            <header className = \"flex items-center\">\r\n                <div className = \"relative search-container w-full\">\r\n                    <input \r\n                    onChange = {handleSearchChange}\r\n                    value = {searchQuery} \r\n                    className = \"w-full\" \r\n                    type=\"text\"/>\r\n                    <span className = \"absolute centered search-icon left-0\">\r\n                        <Search/>\r\n                    </span>\r\n                </div>\r\n            </header>\r\n            <div className = \"flex-grow main\">\r\n                {\r\n                    isError ?\r\n                    <div cla>\r\n\r\n                    </div>:\r\n                    customError.error ?\r\n                    <div className = \"h-full w-full\">\r\n                        { customError.message }\r\n                    </div>:\r\n                    isLoading ?\r\n                    <div>\r\n                        <MoviesSkeleton/>\r\n                    </div>:\r\n                    <div className = \"h-full\">\r\n                        {\r\n                            movies?.length === 0 ?\r\n                            <div className=\"no-movies\">\r\n\r\n                            </div>:\r\n                            <div className = \"MoviesList pb-4 h-full\">\r\n                                {\r\n                                    movies.map((movie)=>\r\n                                        <div  \r\n                                        key = { movie.imdbID } \r\n                                        >\r\n                                            <Movie movie = {movie}/>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <button \r\n            onClick = {toNominationPage} className = \"nomination-count centered\">\r\n                {nominations.length} <Award/>\r\n            </button>\r\n        </StyledSearchPage>\r\n    );\r\n}\r\n \r\nexport default SearchPage;","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\constants\\theme.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledApp.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\pages\\NominationsPage.js",["173"],"import React from 'react';\r\nimport Nomination from '../components/Nomination';\r\nimport PageLayout from '../components/PageLayout';\r\nimport { useNominationContext } from '../context/NominationContext';\r\nimport StyledNominationsPage from '../styled/StyledNominationsPage';\r\nimport { animated, useTransition } from 'react-spring';\r\nimport { Award, ChevronLeft } from 'react-feather';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst NominationsPage = () => {\r\n    const { nominations } = useNominationContext();\r\n\r\n    const transitions = useTransition(nominations,n=>n.imdbID,{\r\n        from: { transform: 'translateY(30px)', opacity: 0},\r\n        enter: { transform: 'translateY(0px)', opacity: 1},\r\n        leave: { transform: 'translateY(30px)', opacity: 0},\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const goBack = React.useCallback(()=>{\r\n        history.goBack()\r\n    },[])\r\n\r\n    return ( \r\n        <PageLayout>\r\n            <StyledNominationsPage className = \"flex h-full flex-col\">\r\n                <header className = \"flex-shrink-0\">\r\n                    <span onClick = {goBack} className = \"mb-4 back\">\r\n                        <ChevronLeft/>\r\n                    </span>\r\n                    <h2>\r\n                        Your Nominations\r\n                    </h2>\r\n                    <p>You have made {nominations.length} nominations</p>\r\n                </header>\r\n                <div className=\"main flex-grow\">\r\n                    {\r\n                        nominations.length > 0 ?\r\n                        <div className=\"MoviesList\">\r\n                            {\r\n                                transitions.map(({item,props,key})=>{\r\n                                    return (\r\n                                        <animated.div style = {props} key = {key}>\r\n                                            <Nomination \r\n                                            nomination = {item} \r\n                                            />\r\n                                        </animated.div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>:\r\n                        <div className = \"h-full no-nominations centered flex-col\">\r\n                            <Award size = {100} color = \"#ccc\"/>\r\n                            <p className = \"text-center mt-3\">When you add nominations, they magically appear here</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </StyledNominationsPage>\r\n        </PageLayout>\r\n     );\r\n}\r\n \r\nexport default NominationsPage;","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\pages\\MoviePage.js",["174","175"],"import React from 'react';\r\nimport { Award, Check, ChevronLeft } from 'react-feather';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport { useQuery } from 'react-query';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { MovieServices } from '../services/movies-services';\r\nimport StyledMoviePage from '../styled/StyledMoviePage';\r\nimport { useNominationContext } from '../context/NominationContext';\r\n\r\nconst MoviePage = () => {\r\n    const { id } = useParams();\r\n    const { isLoading, isError, data: response }  = useQuery(['movie', id], ()=>MovieServices.fetchMovieById(id), {\r\n        enabled: !!id\r\n    })\r\n    \r\n    const { Title, Poster, Actors, Year, Director, imdbID, imdbVotes, imdbRating, Plot, Genre } = response?.data || {};\r\n\r\n    const { addNomination, nominations } = useNominationContext();\r\n\r\n    const addToNominations = React.useCallback(()=>{\r\n        if(response?.data){\r\n            const { imdbID, Title, Poster,  } = response.data\r\n            let movie = {\r\n                imdbID,\r\n                Title,\r\n                Poster,\r\n                Year\r\n            }\r\n            addNomination(movie)\r\n        }\r\n    },[response?.data, addNomination])\r\n\r\n    const exists = React.useMemo(()=>{\r\n        return Boolean(nominations.find(nomination=>nomination.imdbID === imdbID))\r\n    },[imdbID,nominations])\r\n\r\n\r\n    const actors = React.useMemo(()=>{\r\n        if(!Actors) return [];\r\n        return Actors.split(', ');\r\n    },[Actors])\r\n\r\n    const history = useHistory();\r\n\r\n    return ( \r\n        <StyledMoviePage className = \"h-full\">\r\n            <div className = \"poster w-full flex-shrink-0\">\r\n                {\r\n                    isLoading ?\r\n                    <Skeleton height = {450} style = {{ borderRadius: 0}}/>:\r\n                    <div className = \"relative h-full w-full\">\r\n                        <div className = \"image relative h-full\">\r\n                            <img className = \"h-full w-full\" src={Poster} alt=\"\"/>\r\n                        </div>\r\n                        <div className = \"details\">\r\n                            <span onClick = {()=>history.goBack()} className = \"back cursor-pointer\">\r\n                                <ChevronLeft/>\r\n                            </span>\r\n                            <h1>\r\n                                { Title }\r\n                            </h1>\r\n                            <p className = \"writer\"> { Director }</p>\r\n                            <p className = \"year\"> { Year }</p>\r\n                            <div onClick = {()=>addToNominations()} \r\n                            className=\"centered nominate nominate-lg flex items-center\">\r\n                                {\r\n                                    exists ?\r\n                                    <span className = \"centered\">\r\n                                        <Check/>&nbsp; Nominated\r\n                                    </span>:\r\n                                    <span className = \"centered\">\r\n                                        <Award/> &nbsp; Nominate\r\n                                    </span>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className = \"page-details relative flex-grow flex flex-col justify-between\">\r\n                <div onClick = {()=>addToNominations()} className=\"nominate nominate-sm absolute centered\">\r\n                    {\r\n                        exists ?\r\n                        <Check/>:\r\n                        <Award/>\r\n                    }\r\n                </div>\r\n                <div className = \"flex-grow\">\r\n                    <div className = \"mb-4\">\r\n                        {\r\n                            isLoading ?\r\n                            <Skeleton width = {100}/>:\r\n                            <div className = \"rating\">\r\n                                <b>\r\n                                    {imdbRating}\r\n                                </b>\r\n                                &nbsp;\r\n                                <span>\r\n                                    ({ imdbVotes })\r\n                                </span>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className = \"mb-3\">\r\n                        {\r\n                            isLoading ?\r\n                            <>\r\n                                <Skeleton height = {12} style = {{maxWidth: '80%'}}/>\r\n                                <Skeleton height = {12} style = {{maxWidth: '60%'}}/>\r\n                                <Skeleton height = {12} style = {{maxWidth: '95%'}}/>\r\n                                <Skeleton height = {12} style = {{maxWidth: '50%'}}/>\r\n                                <Skeleton height = {12} style = {{maxWidth: '89%'}}/>\r\n                                <Skeleton height = {12} style = {{maxWidth: '89%'}}/>\r\n                            </>:\r\n                            <p className = \"plot\">\r\n                                { Plot }\r\n                            </p>\r\n                        }\r\n                    </div>\r\n                    <div className = \"cast\">\r\n                        {\r\n                            isLoading ?\r\n                            <Skeleton width = {100}/>:\r\n                            <h4>Cast</h4>\r\n                        }\r\n                        <div className = \"flex gap-1 mt-3 flex-wrap\">\r\n                            {\r\n                                isLoading ?\r\n                                new Array(4).fill('').map((_,i)=><Skeleton height = {20} key = {i} width = {100}/>)\r\n                                :\r\n                                actors.map(actor=>\r\n                                <span className = \"actor flex-shrink-0\" key = {actor}>{actor}</span>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    isLoading ?\r\n                    <Skeleton/>:\r\n                    <div className = \"genre\">\r\n                        { Genre }\r\n                    </div>\r\n                }\r\n            </div>\r\n        </StyledMoviePage>\r\n     );\r\n}\r\n \r\nexport default MoviePage;","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\Badge.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\Nofications.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\context\\index.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\MoviesSkeleton.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledHomePage.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\Movie.js",["176"],"import React from 'react';\r\nimport StyledMovie from '../styled/StyledMovie';\r\nimport Placeholder from '../images/movie.png';\r\nimport { Award } from 'react-feather';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useNominationContext } from '../context/NominationContext';\r\n\r\nconst Movie = ({ movie }) => {\r\n    const { Poster, Title, Type, Year, imdbID } = movie;\r\n    const history = useHistory();\r\n    const { addNomination, nominations } = useNominationContext();\r\n\r\n    const toMovie = React.useCallback(()=>{\r\n        history.push(`/movie/${imdbID}`);\r\n    },[imdbID])\r\n\r\n    const addToNominations = React.useCallback((movie)=>{\r\n        addNomination(movie)\r\n    },[addNomination]);\r\n\r\n    const exists = React.useMemo(()=>{\r\n        return Boolean(nominations.find(nomination=>nomination.imdbID === imdbID))\r\n    },[imdbID,nominations])\r\n\r\n\r\n    return ( \r\n        <StyledMovie>\r\n            <div onClick = {toMovie} className = \"poster cursor-pointer w-full relative\">\r\n                <div className=\"h-full w-full\">\r\n                    {\r\n                        Poster === 'N/A' ?\r\n                        <img \r\n                        className = \"h-full w-full\" \r\n                        src={Placeholder} \r\n                        alt=\"\"/>:\r\n\r\n                        <img \r\n                        className = \"h-full w-full\" \r\n                        src = { Poster } \r\n                        alt = \"\"/>\r\n                    }\r\n                </div>\r\n                <span className = \"type-tag px-3 py-1 absolute rounded-full\">\r\n                    { Type }\r\n                </span>\r\n            </div>\r\n            <div className=\"details mt-2\">\r\n                <div>\r\n                    <h4>\r\n                        { Title }&nbsp;\r\n                        &#183;\r\n                        &nbsp;\r\n                        <span>\r\n                            { Year }\r\n                        </span>\r\n                    </h4>\r\n                </div>\r\n                <div className=\"flex justify-between mt-3\">\r\n                    <button\r\n                    disabled = {exists}\r\n                    onClick = { ()=>addToNominations(movie) } \r\n                    className = \"flex border-none nominate cursor-pointer\">\r\n                        <Award size = {18}/>&nbsp;\r\n                        Nominate\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </StyledMovie>\r\n     );\r\n}\r\n \r\nexport default Movie;","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\NetError.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\context\\NominationContext.js",["177","178"],"import React, { useState } from 'react';\r\nimport _ from 'lodash';\r\nimport NotificationTypes from '../constants/notification-type';\r\nimport { useNotificationContext } from './NotificationContext';\r\nimport { NOMINATIONS } from '../constants/general';\r\n\r\nconst Context = React.createContext();\r\nconst MAX_NOMINATIONS = 5;\r\n\r\nconst nominationsFromLocalStorage = localStorage.getItem(NOMINATIONS);\r\n\r\nconsole.log({nominationsFromLocalStorage})\r\n\r\nconst NominationContext = ({children, showBadge}) => {\r\n    const [ nominations, setNominations ] = useState( nominationsFromLocalStorage ? JSON.parse(nominationsFromLocalStorage) : []);\r\n    const { addNotification } = useNotificationContext();\r\n\r\n    const addNomination = React.useCallback((movie)=>{\r\n        if(nominations.length < MAX_NOMINATIONS){\r\n            setNominations(nominations=>\r\n                _.uniqBy([...nominations,movie], movie=>movie.imdbID)\r\n            )\r\n        }else{\r\n            addNotification(\r\n                NotificationTypes.INFO, \r\n                \"Maximum nominations reached!\",\r\n                `You have added the maximum (${MAX_NOMINATIONS}) nominations`\r\n            )\r\n        }\r\n    },[nominations])\r\n\r\n    const removeNomination = React.useCallback((nominationId)=>{\r\n        let nominationIndex = \r\n        nominations.findIndex((nomination)=>nomination.imdbID === nominationId);\r\n        if(nominationIndex !== -1){\r\n            let newNominations = [...nominations];\r\n            newNominations.splice(nominationIndex,1);\r\n            setNominations(newNominations)\r\n        }\r\n    },[nominations])\r\n\r\n    React.useEffect(()=>{\r\n        if(nominations.length === MAX_NOMINATIONS){\r\n            showBadge();\r\n        }\r\n        localStorage.setItem(NOMINATIONS,JSON.stringify(nominations))\r\n    },[nominations])\r\n\r\n    return ( \r\n        <Context.Provider value = {{\r\n            nominations,\r\n            addNomination,\r\n            removeNomination\r\n        }}>\r\n            { children }\r\n        </Context.Provider>\r\n     );\r\n}\r\n\r\nconst useNominationContext = ()=>React.useContext(Context);\r\n \r\nexport { NominationContext as default, useNominationContext };","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\PageLayout.js",["179"],"import React from 'react';\r\nimport { Award, Bookmark, User } from 'react-feather';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { useNominationContext } from '../context/NominationContext';\r\nimport StyledPageLayout from '../styled/StyledPageLayout';\r\n\r\nconst PageLayout = ({ children }) => {\r\n    const { nominations } = useNominationContext();\r\n    return ( \r\n        <StyledPageLayout>\r\n            <main>\r\n                { children }\r\n            </main>\r\n            <footer>\r\n                <div className = \"w-full h-full px-2\">\r\n                    <ul className = \"h-full w-full\">\r\n                        <li className = \"px-3\">\r\n                            <NavLink\r\n                            exact\r\n                            to = '/' \r\n                            activeClassName = \"active\">\r\n                                <Bookmark size = {26}/>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className = \"px-3\">\r\n                            <NavLink\r\n                            to = '/nominations'\r\n                            activeClassName = \"active\">\r\n                                <div  className = \"relative\">\r\n                                    <Award size = {26}/>\r\n                                    <span className=\"absolute centered nominations-count\">\r\n                                        { nominations.length }\r\n                                    </span>\r\n                                </div>\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className = \"px-3\">\r\n                            <NavLink\r\n                            to = '/account'\r\n                            activeClassName = \"active\">\r\n                                <User size = {26}/>\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </footer>\r\n        </StyledPageLayout>\r\n     );\r\n}\r\n \r\nexport default PageLayout;","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\Nomination.js",["180"],"import React from 'react';\r\nimport { Minus } from 'react-feather';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useNominationContext } from '../context/NominationContext';\r\nimport StyledNomination from '../styled/StyledNomination';\r\n\r\nconst Nomination = ({ nomination }) => {\r\n    const { imdbID, Title, Poster, Year } = nomination;\r\n    const history = useHistory();\r\n    const { removeNomination } = useNominationContext();\r\n\r\n    const toMoviePage = React.useCallback(()=>{\r\n        history.push(`movie/${imdbID}`)\r\n    },[imdbID]);\r\n\r\n    const remove = React.useCallback((event)=>{\r\n        event.stopPropagation();\r\n        removeNomination(imdbID);\r\n    },[imdbID,removeNomination])\r\n\r\n    return ( \r\n        <StyledNomination onClick = {toMoviePage} className = \"relative\">\r\n            <div className = \"poster\">\r\n                <img className = \"h-full w-full\" src={ Poster } alt=\"\"/>\r\n            </div>\r\n            <div className = \"details flex items-end absolute inset-0\">\r\n                <div className = \"flex w-full gap-x-2 justify-between\">\r\n                    <div className = \"flex-grow min-w-0\">\r\n                        <h3 className = \"truncate\">{Title}</h3>\r\n                        <p>{Year}</p>\r\n                    </div>\r\n                    <div className = \"flex-shrink-0 ml-3\">\r\n                        <button onClick = {remove} className = \"remove centered flex cursor-pointer items-center\">\r\n                            <Minus/>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </StyledNomination>\r\n     );\r\n}\r\n \r\nexport default Nomination;","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledMoviePage.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledSearchPage.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledBadge.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledNominationsPage.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\services\\movies-services.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledNotifications.js",["181"],"import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNotifications = styled.div`\r\n    position: fixed;\r\n    width:100vw;\r\n    max-width: 400px;\r\n    bottom: 0;\r\n    right: 0;\r\n    z-index: 200;\r\n    pointer-events:none;\r\n    padding:20px 16px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    row-gap:10px;\r\n`;\r\n\r\nexport default StyledNotifications;","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\context\\NotificationContext.js",["182"],"import React, { useState } from 'react';\r\nimport NotificationType from '../constants/notification-type';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst NotificationContext = ({children}) => {\r\n    const [ notifications, setNotifications ] = useState([]);\r\n\r\n    const addNotification = React.useCallback((type, title, message)=>{\r\n        setNotifications(notifications=>[...notifications,\r\n        {\r\n            id: `${Date.now()}${notifications.length}`,\r\n            type,\r\n            title,\r\n            message\r\n        }])\r\n    },[])\r\n\r\n    const removeNotification = React.useCallback((notificationId)=>{\r\n        let notificationIndex = notifications\r\n        .findIndex(notification=>notification.id === notificationId);\r\n\r\n        let copy = [...notifications];\r\n\r\n        if( notificationIndex !== -1){\r\n            copy.splice(notificationIndex,1);\r\n            setNotifications(copy)\r\n        }\r\n\r\n    },[notifications])\r\n\r\n    return ( \r\n        <Context.Provider value = {{\r\n            notifications,\r\n            addNotification,\r\n            removeNotification\r\n        }}>\r\n            { children }\r\n        </Context.Provider>\r\n     );\r\n}\r\n\r\nconst useNotificationContext = ()=>React.useContext(Context);\r\n \r\nexport { NotificationContext as default, useNotificationContext };","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\components\\Notification.js",["183"],"import React from 'react';\r\nimport { Check, Info, X } from 'react-feather';\r\nimport NotificationType from '../constants/notification-type';\r\nimport { useNotificationContext } from '../context/NotificationContext';\r\nimport StyledNotification from '../styled/StyledNotification';\r\n\r\nconst Notification = ({ notification }) => {\r\n    const { type, title, message, id } = notification;\r\n    const { removeNotification } = useNotificationContext();\r\n\r\n    React.useEffect(()=>{\r\n        let timeout = setTimeout(()=>{\r\n            removeNotification(id)\r\n        },3000);\r\n        return ()=>{\r\n            timeout && clearTimeout(timeout);\r\n        }\r\n    },[])\r\n\r\n    const Icon = React.useMemo(()=>{\r\n        switch(type){\r\n            case NotificationType.SUCCESS:\r\n                return Check;\r\n            case NotificationType.ERROR:\r\n                return X;\r\n            case NotificationType.INFO:\r\n                return Info\r\n            default:\r\n                return Check\r\n        }\r\n    },[type]);\r\n\r\n    const color = React.useMemo(()=>{\r\n        switch(type){\r\n            case NotificationType.SUCCESS:\r\n                return \"#5cb85c\";\r\n            case NotificationType.ERROR:\r\n                return \"#d9534f\";\r\n            case NotificationType.INFO:\r\n                return \"#5bc0de\"\r\n            default:\r\n                return \"#5cb85c\"\r\n        }\r\n    },[type])\r\n\r\n    return ( \r\n        <StyledNotification className = \"flex\">\r\n            <div>\r\n                <Icon color = {color} size = {30}/>\r\n            </div>\r\n            <div className = \"ml-2 flex justify-between flex-grow\">\r\n                <div>\r\n                    <h3>\r\n                        {\r\n                            title\r\n                        }\r\n                    </h3>\r\n                    <p>\r\n                        {\r\n                            message\r\n                        }\r\n                    </p>\r\n                </div>\r\n                <div className = \"ml-1\">\r\n                    <span onClick = {()=>removeNotification(id)}>\r\n                        <X size = {18} color = \"#d7d8d9\"/>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </StyledNotification>\r\n    );\r\n}\r\n \r\nexport default Notification;","C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledMoviesSkeleton.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledNetError.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\constants\\notification-type.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\constants\\general.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledPageLayout.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledNomination.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledMovie.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\utils\\styled-utils.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\styled\\StyledNotification.js",[],"C:\\Users\\user pc\\Desktop\\shoppyApp\\src\\svg\\index.js",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":10,"column":8,"nodeType":"190","messageId":"191","endLine":10,"endColumn":13},{"ruleId":"192","severity":1,"message":"193","line":26,"column":7,"nodeType":"194","endLine":26,"endColumn":9,"suggestions":"195"},{"ruleId":"192","severity":1,"message":"196","line":32,"column":7,"nodeType":"194","endLine":32,"endColumn":20,"suggestions":"197"},{"ruleId":"192","severity":1,"message":"193","line":36,"column":7,"nodeType":"194","endLine":36,"endColumn":9,"suggestions":"198"},{"ruleId":"192","severity":1,"message":"193","line":23,"column":7,"nodeType":"194","endLine":23,"endColumn":9,"suggestions":"199"},{"ruleId":"188","severity":1,"message":"200","line":12,"column":24,"nodeType":"190","messageId":"191","endLine":12,"endColumn":31},{"ruleId":"192","severity":1,"message":"201","line":31,"column":7,"nodeType":"194","endLine":31,"endColumn":38,"suggestions":"202"},{"ruleId":"192","severity":1,"message":"193","line":15,"column":7,"nodeType":"194","endLine":15,"endColumn":15,"suggestions":"203"},{"ruleId":"192","severity":1,"message":"204","line":30,"column":7,"nodeType":"194","endLine":30,"endColumn":20,"suggestions":"205"},{"ruleId":"192","severity":1,"message":"206","line":47,"column":7,"nodeType":"194","endLine":47,"endColumn":20,"suggestions":"207"},{"ruleId":"188","severity":1,"message":"208","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":14,"column":7,"nodeType":"194","endLine":14,"endColumn":15,"suggestions":"209"},{"ruleId":"188","severity":1,"message":"210","line":1,"column":8,"nodeType":"190","messageId":"191","endLine":1,"endColumn":13},{"ruleId":"188","severity":1,"message":"211","line":2,"column":8,"nodeType":"190","messageId":"191","endLine":2,"endColumn":24},{"ruleId":"192","severity":1,"message":"212","line":18,"column":7,"nodeType":"194","endLine":18,"endColumn":9,"suggestions":"213"},"no-native-reassign",["214"],"no-negated-in-lhs",["215"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["216"],"React Hook React.useCallback has an unnecessary dependency: 'searchQuery'. Either exclude it or remove the dependency array.",["217"],["218"],["219"],"'isError' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'Year'. Either include it or remove the dependency array.",["220"],["221"],"React Hook React.useCallback has a missing dependency: 'addNotification'. Either include it or remove the dependency array.",["222"],"React Hook React.useEffect has a missing dependency: 'showBadge'. Either include it or remove the dependency array. If 'showBadge' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["223"],"'Link' is defined but never used.",["224"],"'React' is defined but never used.","'NotificationType' is defined but never used.","React Hook React.useEffect has missing dependencies: 'id' and 'removeNotification'. Either include them or remove the dependency array.",["225"],"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"226","fix":"230"},{"desc":"226","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"234","fix":"240"},{"desc":"241","fix":"242"},"Update the dependencies array to be: [history]",{"range":"243","text":"244"},"Update the dependencies array to be: []",{"range":"245","text":"246"},{"range":"247","text":"244"},{"range":"248","text":"244"},"Update the dependencies array to be: [response.data, Year, addNomination]",{"range":"249","text":"250"},"Update the dependencies array to be: [history, imdbID]",{"range":"251","text":"252"},"Update the dependencies array to be: [addNotification, nominations.length]",{"range":"253","text":"254"},"Update the dependencies array to be: [nominations, showBadge]",{"range":"255","text":"256"},{"range":"257","text":"252"},"Update the dependencies array to be: [id, removeNotification]",{"range":"258","text":"259"},[1019,1021],"[history]",[1131,1144],"[]",[1249,1251],[893,895],[1170,1201],"[response.data, Year, addNomination]",[575,583],"[history, imdbID]",[1174,1187],"[addNotification, nominations.length]",[1789,1802],"[nominations, showBadge]",[538,546],[654,656],"[id, removeNotification]"]