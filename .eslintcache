[{"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/index.js":"1","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/App.js":"2","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/reportWebVitals.js":"3","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/pages/HomePage.js":"4","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/constants/theme.js":"5","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/pages/NominationsPage.js":"6","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledApp.js":"7","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/pages/SearchPage.js":"8","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/pages/MoviePage.js":"9","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/Badge.js":"10","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/pages/Account.js":"11","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/Nofications.js":"12","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/context/index.js":"13","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/MoviesSkeleton.js":"14","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/Movie.js":"15","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/PageLayout.js":"16","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/NetError.js":"17","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/Nomination.js":"18","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/context/NominationContext.js":"19","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledMoviePage.js":"20","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledHomePage.js":"21","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledSearchPage.js":"22","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledNominationsPage.js":"23","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/context/NotificationContext.js":"24","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledBadge.js":"25","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledNotifications.js":"26","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/Notification.js":"27","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/services/movies-services.js":"28","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledMoviesSkeleton.js":"29","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledMovie.js":"30","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledNetError.js":"31","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledPageLayout.js":"32","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledNomination.js":"33","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/constants/general.js":"34","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/constants/notification-type.js":"35","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledNotification.js":"36","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/utils/styled-utils.js":"37","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/svg/index.js":"38"},{"size":500,"mtime":1642429484695,"results":"39","hashOfConfig":"40"},{"size":2223,"mtime":1642429484692,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1642429484697,"results":"42","hashOfConfig":"40"},{"size":3296,"mtime":1642429484696,"results":"43","hashOfConfig":"40"},{"size":157,"mtime":1642429484694,"results":"44","hashOfConfig":"40"},{"size":2571,"mtime":1642429484697,"results":"45","hashOfConfig":"40"},{"size":338,"mtime":1642429484698,"results":"46","hashOfConfig":"40"},{"size":3754,"mtime":1642429484697,"results":"47","hashOfConfig":"40"},{"size":6174,"mtime":1642429484696,"results":"48","hashOfConfig":"40"},{"size":506,"mtime":1642429484692,"results":"49","hashOfConfig":"40"},{"size":380,"mtime":1642429484696,"results":"50","hashOfConfig":"40"},{"size":1072,"mtime":1642429484693,"results":"51","hashOfConfig":"40"},{"size":418,"mtime":1642429484694,"results":"52","hashOfConfig":"40"},{"size":895,"mtime":1642429484692,"results":"53","hashOfConfig":"40"},{"size":2411,"mtime":1642429484692,"results":"54","hashOfConfig":"40"},{"size":1985,"mtime":1642429484693,"results":"55","hashOfConfig":"40"},{"size":865,"mtime":1642429484693,"results":"56","hashOfConfig":"40"},{"size":1616,"mtime":1642429484693,"results":"57","hashOfConfig":"40"},{"size":2091,"mtime":1642429484694,"results":"58","hashOfConfig":"40"},{"size":3636,"mtime":1642429484700,"results":"59","hashOfConfig":"40"},{"size":1061,"mtime":1642429484699,"results":"60","hashOfConfig":"40"},{"size":1615,"mtime":1642429484702,"results":"61","hashOfConfig":"40"},{"size":926,"mtime":1642429484701,"results":"62","hashOfConfig":"40"},{"size":1256,"mtime":1642429484694,"results":"63","hashOfConfig":"40"},{"size":273,"mtime":1642429484699,"results":"64","hashOfConfig":"40"},{"size":367,"mtime":1642429484701,"results":"65","hashOfConfig":"40"},{"size":2192,"mtime":1642429484693,"results":"66","hashOfConfig":"40"},{"size":671,"mtime":1642429484698,"results":"67","hashOfConfig":"40"},{"size":381,"mtime":1642429484700,"results":"68","hashOfConfig":"40"},{"size":1068,"mtime":1642429484699,"results":"69","hashOfConfig":"40"},{"size":456,"mtime":1642429484700,"results":"70","hashOfConfig":"40"},{"size":1720,"mtime":1642429484702,"results":"71","hashOfConfig":"40"},{"size":854,"mtime":1642429484700,"results":"72","hashOfConfig":"40"},{"size":40,"mtime":1642429484693,"results":"73","hashOfConfig":"40"},{"size":121,"mtime":1642429484694,"results":"74","hashOfConfig":"40"},{"size":347,"mtime":1642429484701,"results":"75","hashOfConfig":"40"},{"size":473,"mtime":1642429484702,"results":"76","hashOfConfig":"40"},{"size":1299,"mtime":1642429484702,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15lxaxj",{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/index.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/App.js",["166"],"import React from 'react';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './constants/theme';\nimport AppContext from './context';\nimport HomePage from './pages/HomePage';\nimport MoviePage from './pages/MoviePage';\nimport NominationsPage from './pages/NominationsPage';\nimport StyledApp from './styled/StyledApp';\nimport axios from 'axios';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport SearchPage from './pages/SearchPage';\nimport Notifcations from './components/Nofications';\nimport { useSpring, animated } from 'react-spring';\nimport Badge from './components/Badge';\nimport AccountPage from './pages/Account';\n\nconst queryClient = new QueryClient();\nfunction App() {\n  const [show,set] = React.useState(false);\n\n  React.useEffect(()=>{\n    let timeout = null;\n    if(show){\n        timeout = setTimeout(()=>{\n          set(false)\n        },2000)\n    }\n    return ()=>{\n      timeout && clearTimeout(timeout);\n    }\n  },[show])\n\n  const props = useSpring({  transform: show ? 'transformY(10px) scale(1)':'transformY(10px) scale(0)', opacity: show ? 1 : 0})\n\n  return (\n      <QueryClientProvider client = { queryClient }>\n        <ThemeProvider theme = {theme}>\n          <StyledApp>\n              <AppContext showBadge = {()=>set(true)}>\n                <Router>\n                  <Switch>\n                    <Route exact path = '/' component = {HomePage}/>\n                    <Route path = '/nominations' component = {NominationsPage}/>\n                    <Route path = '/search' component = {SearchPage}/>\n                    <Route path = '/account' component = {AccountPage}/>\n                    <Route path = '/movie/:id' component = {MoviePage}/>\n                  </Switch>\n                </Router>\n                <Notifcations/>\n                {\n                  show && (\n                    <animated.div className = \"badge\" style = {props}>\n                      <Badge/>\n                    </animated.div>\n                  )\n                }\n              </AppContext>\n          </StyledApp>\n        </ThemeProvider>\n      </QueryClientProvider>\n  );\n}\n\nexport default App;\n","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/reportWebVitals.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/pages/HomePage.js",["167"],"import React from 'react';\nimport { Search } from 'react-feather';\nimport { useQuery } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport Movie from '../components/Movie';\nimport MoviesSkeleton from '../components/MoviesSkeleton';\nimport PageLayout from '../components/PageLayout';\nimport { MovieServices } from '../services/movies-services';\nimport StyledHomePage from '../styled/StyledHomePage';\nimport NetError from '../components/NetError';\n\nconst randomMoviesKeys = ['the am', 'very', 'dam', 'pet', 'sam', 'play'];\n\nconst HomePage = () => {\n    const [customError, setError] = React.useState({\n        error: false,\n        message: false\n    })\n    const { isLoading, isError, data: response, refetch } = useQuery(\n    'movies', \n    ()=>MovieServices.fetchMovies(randomMoviesKeys[Math.floor(Math.random() * randomMoviesKeys.length)])\n    );\n    const history = useHistory();\n    const goToSearchPage = React.useCallback(()=>{\n        history.push('/search')\n    },[]);\n\n    let movies = React.useMemo(()=>{\n        if(!response) return [];\n        if(response.data.Response === 'False'){\n            setError({\n                error: true,\n                message: response.data.Error || 'Something went wrong'\n            })\n            return [];\n        };\n        setError({\n            error: false,\n            message: ''\n        })\n        return response.data.Search\n    },[response]);\n\n\n    return ( \n        <PageLayout>\n            <StyledHomePage className =\"flex flex-col\">\n                <header className = \"flex items-center justify-between flex-shrink-0\">\n                    <h1>\n                        Movies\n                    </h1>\n                    <div>\n                        <button\n                        onClick = {goToSearchPage} \n                        className = \"border-none centered cursor-pointer\">\n                            <Search/>\n                        </button>\n                    </div>\n                </header>\n                <div className = \"flex-grow main  h-full\">\n                    {\n                        isError ?\n                        <div>\n                            <NetError reloadFn = {refetch}/>\n                        </div>:\n                        customError.error ?\n                        <div>\n                            <div className = \"c-error\">\n                                { customError.message }\n                            </div>\n                        </div>:\n                        isLoading ?\n                        <div className = \"loading\">\n                            <MoviesSkeleton/>\n                        </div>:\n                        <div className = \"MovieList h-full\">\n                            {\n                                movies.map((movie,index)=>\n                                    <div  \n                                    key = { `${ movie.imdbID }-${index}` } \n                                    >\n                                        <Movie movie = {movie}/>\n                                    </div>\n                                )\n                            }\n                        </div>\n                    }\n                </div>\n            </StyledHomePage>\n        </PageLayout>\n    );\n}\n \nexport default HomePage;","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/constants/theme.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/pages/NominationsPage.js",["168"],"import React from 'react';\nimport Nomination from '../components/Nomination';\nimport PageLayout from '../components/PageLayout';\nimport { useNominationContext } from '../context/NominationContext';\nimport StyledNominationsPage from '../styled/StyledNominationsPage';\nimport { animated, useTransition } from 'react-spring';\nimport { Award, ChevronLeft } from 'react-feather';\nimport { useHistory } from 'react-router-dom';\n\nconst NominationsPage = () => {\n    const { nominations } = useNominationContext();\n\n    const transitions = useTransition(nominations,n=>n.imdbID,{\n        from: { transform: 'translateY(30px)', opacity: 0},\n        enter: { transform: 'translateY(0px)', opacity: 1},\n        leave: { transform: 'translateY(30px)', opacity: 0},\n    });\n\n    const history = useHistory();\n\n    const goBack = React.useCallback(()=>{\n        history.goBack()\n    },[])\n\n    return ( \n        <PageLayout>\n            <StyledNominationsPage className = \"flex h-full flex-col\">\n                <header className = \"flex-shrink-0\">\n                    <span onClick = {goBack} className = \"mb-4 back\">\n                        <ChevronLeft/>\n                    </span>\n                    <h2>\n                        Your Nominations\n                    </h2>\n                    <p>You have made {nominations.length} nominations</p>\n                </header>\n                <div className=\"main flex-grow\">\n                    {\n                        nominations.length > 0 ?\n                        <div className=\"MoviesList\">\n                            {\n                                transitions.map(({item,props,key})=>{\n                                    return (\n                                        <animated.div style = {props} key = {key}>\n                                            <Nomination \n                                            nomination = {item} \n                                            />\n                                        </animated.div>\n                                    )\n                                })\n                            }\n                        </div>:\n                        <div className = \"h-full no-nominations centered flex-col\">\n                            <Award size = {100} color = \"#ccc\"/>\n                            <p className = \"text-center mt-3\">When you add nominations, they magically appear here</p>\n                        </div>\n                    }\n                </div>\n            </StyledNominationsPage>\n        </PageLayout>\n     );\n}\n \nexport default NominationsPage;","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledApp.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/pages/SearchPage.js",["169","170"],"import React from 'react';\nimport { Award, Search } from 'react-feather';\nimport { useQuery } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport Movie from '../components/Movie';\nimport MoviesSkeleton from '../components/MoviesSkeleton';\nimport { useNominationContext } from '../context/NominationContext';\nimport { MovieServices } from '../services/movies-services';\nimport StyledSearchPage from '../styled/StyledSearchPage';\n\nconst SearchPage = () => {\n    const [searchQuery,setSearchQuery] = React.useState(\"\");\n    const { nominations } = useNominationContext();\n    const [customError, setError] = React.useState({\n        error: false,\n        message: false\n    })\n\n    const history = useHistory();\n\n    const { isLoading, data:response, isError } = useQuery(\n        ['movies-title', searchQuery], \n        ()=>MovieServices.fetchMoviesByTitle(searchQuery),\n        {\n            enabled: searchQuery.length > 1\n        }\n    )\n\n    const handleSearchChange = React.useCallback((event)=>{\n        const value = event.target.value;\n        setSearchQuery(value)\n    },[searchQuery]);\n\n    const toNominationPage = React.useCallback(()=>{\n        history.push('/nominations');\n    },[])\n\n    const movies = React.useMemo(()=>{\n        if(!response) return [];\n        if(response.data.Response === 'False'){\n            setError({\n                error: true,\n                message: response.data.Error || 'Something went wrong'\n            })\n            return [];\n        };\n        setError({\n            error: false,\n            message: ''\n        })\n        return response.data.Search\n    },[response])\n\n    return ( \n        <StyledSearchPage className = \"flex flex-col\">\n            <header className = \"flex items-center\">\n                <div className = \"relative search-container w-full\">\n                    <input \n                    onChange = {handleSearchChange}\n                    value = {searchQuery} \n                    className = \"w-full\" \n                    type=\"text\"/>\n                    <span className = \"absolute centered search-icon left-0\">\n                        <Search/>\n                    </span>\n                </div>\n            </header>\n            <div className = \"flex-grow main\">\n                {\n                    isError ?\n                    <div cla>\n\n                    </div>:\n                    customError.error ?\n                    <div className = \"h-full w-full\">\n                        { customError.message }\n                    </div>:\n                    isLoading ?\n                    <div>\n                        <MoviesSkeleton/>\n                    </div>:\n                    <div className = \"h-full\">\n                        {\n                            movies?.length === 0 ?\n                            <div className=\"no-movies\">\n\n                            </div>:\n                            <div className = \"MoviesList pb-4 h-full\">\n                                {\n                                    movies.map((movie)=>\n                                        <div  \n                                        key = { movie.imdbID } \n                                        >\n                                            <Movie movie = {movie}/>\n                                        </div>\n                                    )\n                                }\n                            </div>\n                        }\n                    </div>\n                }\n            </div>\n            <button \n            onClick = {toNominationPage} className = \"nomination-count centered\">\n                {nominations.length} <Award/>\n            </button>\n        </StyledSearchPage>\n    );\n}\n \nexport default SearchPage;","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/pages/MoviePage.js",["171","172"],"import React from 'react';\nimport { Award, Check, ChevronLeft } from 'react-feather';\nimport Skeleton from 'react-loading-skeleton';\nimport { useQuery } from 'react-query';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { MovieServices } from '../services/movies-services';\nimport StyledMoviePage from '../styled/StyledMoviePage';\nimport { useNominationContext } from '../context/NominationContext';\n\nconst MoviePage = () => {\n    const { id } = useParams();\n    const { isLoading, isError, data: response }  = useQuery(['movie', id], ()=>MovieServices.fetchMovieById(id), {\n        enabled: !!id\n    })\n    \n    const { Title, Poster, Actors, Year, Director, imdbID, imdbVotes, imdbRating, Plot, Genre } = response?.data || {};\n\n    const { addNomination, nominations } = useNominationContext();\n\n    const addToNominations = React.useCallback(()=>{\n        if(response?.data){\n            const { imdbID, Title, Poster,  } = response.data\n            let movie = {\n                imdbID,\n                Title,\n                Poster,\n                Year\n            }\n            addNomination(movie)\n        }\n    },[response?.data, addNomination])\n\n    const exists = React.useMemo(()=>{\n        return Boolean(nominations.find(nomination=>nomination.imdbID === imdbID))\n    },[imdbID,nominations])\n\n\n    const actors = React.useMemo(()=>{\n        if(!Actors) return [];\n        return Actors.split(', ');\n    },[Actors])\n\n    const history = useHistory();\n\n    return ( \n        <StyledMoviePage className = \"h-full\">\n            <div className = \"poster w-full flex-shrink-0\">\n                {\n                    isLoading ?\n                    <Skeleton height = {450} style = {{ borderRadius: 0}}/>:\n                    <div className = \"relative h-full w-full\">\n                        <div className = \"image relative h-full\">\n                            <img className = \"h-full w-full\" src={Poster} alt=\"\"/>\n                        </div>\n                        <div className = \"details\">\n                            <span onClick = {()=>history.goBack()} className = \"back cursor-pointer\">\n                                <ChevronLeft/>\n                            </span>\n                            <h1>\n                                { Title }\n                            </h1>\n                            <p className = \"writer\"> { Director }</p>\n                            <p className = \"year\"> { Year }</p>\n                            <div onClick = {()=>addToNominations()} \n                            className=\"centered nominate nominate-lg flex items-center\">\n                                {\n                                    exists ?\n                                    <span className = \"centered\">\n                                        <Check/>&nbsp; Nominated\n                                    </span>:\n                                    <span className = \"centered\">\n                                        <Award/> &nbsp; Nominate\n                                    </span>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n            <div className = \"page-details relative flex-grow flex flex-col justify-between\">\n                <div onClick = {()=>addToNominations()} className=\"nominate nominate-sm absolute centered\">\n                    {\n                        exists ?\n                        <Check/>:\n                        <Award/>\n                    }\n                </div>\n                <div className = \"flex-grow\">\n                    <div className = \"mb-4\">\n                        {\n                            isLoading ?\n                            <Skeleton width = {100}/>:\n                            <div className = \"rating\">\n                                <b>\n                                    {imdbRating}\n                                </b>\n                                &nbsp;\n                                <span>\n                                    ({ imdbVotes })\n                                </span>\n                            </div>\n                        }\n                    </div>\n                    <div className = \"mb-3\">\n                        {\n                            isLoading ?\n                            <>\n                                <Skeleton height = {12} style = {{maxWidth: '80%'}}/>\n                                <Skeleton height = {12} style = {{maxWidth: '60%'}}/>\n                                <Skeleton height = {12} style = {{maxWidth: '95%'}}/>\n                                <Skeleton height = {12} style = {{maxWidth: '50%'}}/>\n                                <Skeleton height = {12} style = {{maxWidth: '89%'}}/>\n                                <Skeleton height = {12} style = {{maxWidth: '89%'}}/>\n                            </>:\n                            <p className = \"plot\">\n                                { Plot }\n                            </p>\n                        }\n                    </div>\n                    <div className = \"cast\">\n                        {\n                            isLoading ?\n                            <Skeleton width = {100}/>:\n                            <h4>Cast</h4>\n                        }\n                        <div className = \"flex gap-1 mt-3 flex-wrap\">\n                            {\n                                isLoading ?\n                                new Array(4).fill('').map((_,i)=><Skeleton height = {20} key = {i} width = {100}/>)\n                                :\n                                actors.map(actor=>\n                                <span className = \"actor flex-shrink-0\" key = {actor}>{actor}</span>)\n                            }\n                        </div>\n                    </div>\n                </div>\n                {\n                    isLoading ?\n                    <Skeleton/>:\n                    <div className = \"genre\">\n                        { Genre }\n                    </div>\n                }\n            </div>\n        </StyledMoviePage>\n     );\n}\n \nexport default MoviePage;","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/Badge.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/pages/Account.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/Nofications.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/context/index.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/MoviesSkeleton.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/Movie.js",["173"],"import React from 'react';\nimport StyledMovie from '../styled/StyledMovie';\nimport Placeholder from '../images/movie.png';\nimport { Award } from 'react-feather';\nimport { useHistory } from 'react-router-dom';\nimport { useNominationContext } from '../context/NominationContext';\n\nconst Movie = ({ movie }) => {\n    const { Poster, Title, Type, Year, imdbID } = movie;\n    const history = useHistory();\n    const { addNomination, nominations } = useNominationContext();\n\n    const toMovie = React.useCallback(()=>{\n        history.push(`/movie/${imdbID}`);\n    },[imdbID])\n\n    const addToNominations = React.useCallback((movie)=>{\n        addNomination(movie)\n    },[addNomination]);\n\n    const exists = React.useMemo(()=>{\n        return Boolean(nominations.find(nomination=>nomination.imdbID === imdbID))\n    },[imdbID,nominations])\n\n\n    return ( \n        <StyledMovie>\n            <div onClick = {toMovie} className = \"poster cursor-pointer w-full relative\">\n                <div className=\"h-full w-full\">\n                    {\n                        Poster === 'N/A' ?\n                        <img \n                        className = \"h-full w-full\" \n                        src={Placeholder} \n                        alt=\"\"/>:\n\n                        <img \n                        className = \"h-full w-full\" \n                        src = { Poster } \n                        alt = \"\"/>\n                    }\n                </div>\n                <span className = \"type-tag px-3 py-1 absolute rounded-full\">\n                    { Type }\n                </span>\n            </div>\n            <div className=\"details mt-2\">\n                <div>\n                    <h4>\n                        { Title }&nbsp;\n                        &#183;\n                        &nbsp;\n                        <span>\n                            { Year }\n                        </span>\n                    </h4>\n                </div>\n                <div className=\"flex justify-between mt-3\">\n                    <button\n                    disabled = {exists}\n                    onClick = { ()=>addToNominations(movie) } \n                    className = \"flex border-none nominate cursor-pointer\">\n                        <Award size = {18}/>&nbsp;\n                        Nominate\n                    </button>\n                </div>\n            </div>\n        </StyledMovie>\n     );\n}\n \nexport default Movie;","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/PageLayout.js",["174"],"import React from 'react';\nimport { Award, Bookmark, User } from 'react-feather';\nimport { Link, NavLink } from 'react-router-dom';\nimport { useNominationContext } from '../context/NominationContext';\nimport StyledPageLayout from '../styled/StyledPageLayout';\n\nconst PageLayout = ({ children }) => {\n    const { nominations } = useNominationContext();\n    return ( \n        <StyledPageLayout>\n            <main>\n                { children }\n            </main>\n            <footer>\n                <div className = \"w-full h-full px-2\">\n                    <ul className = \"h-full w-full\">\n                        <li className = \"px-3\">\n                            <NavLink\n                            exact\n                            to = '/' \n                            activeClassName = \"active\">\n                                <Bookmark size = {26}/>\n                            </NavLink>\n                        </li>\n                        <li className = \"px-3\">\n                            <NavLink\n                            to = '/nominations'\n                            activeClassName = \"active\">\n                                <div  className = \"relative\">\n                                    <Award size = {26}/>\n                                    <span className=\"absolute centered nominations-count\">\n                                        { nominations.length }\n                                    </span>\n                                </div>\n                            </NavLink>\n                        </li>\n                        <li className = \"px-3\">\n                            <NavLink\n                            to = '/account'\n                            activeClassName = \"active\">\n                                <User size = {26}/>\n                            </NavLink>\n                        </li>\n                    </ul>\n                </div>\n            </footer>\n        </StyledPageLayout>\n     );\n}\n \nexport default PageLayout;","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/NetError.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/Nomination.js",["175"],"import React from 'react';\nimport { Minus } from 'react-feather';\nimport { useHistory } from 'react-router-dom';\nimport { useNominationContext } from '../context/NominationContext';\nimport StyledNomination from '../styled/StyledNomination';\n\nconst Nomination = ({ nomination }) => {\n    const { imdbID, Title, Poster, Year } = nomination;\n    const history = useHistory();\n    const { removeNomination } = useNominationContext();\n\n    const toMoviePage = React.useCallback(()=>{\n        history.push(`movie/${imdbID}`)\n    },[imdbID]);\n\n    const remove = React.useCallback((event)=>{\n        event.stopPropagation();\n        removeNomination(imdbID);\n    },[imdbID,removeNomination])\n\n    return ( \n        <StyledNomination onClick = {toMoviePage} className = \"relative\">\n            <div className = \"poster\">\n                <img className = \"h-full w-full\" src={ Poster } alt=\"\"/>\n            </div>\n            <div className = \"details flex items-end absolute inset-0\">\n                <div className = \"flex w-full gap-x-2 justify-between\">\n                    <div className = \"flex-grow min-w-0\">\n                        <h3 className = \"truncate\">{Title}</h3>\n                        <p>{Year}</p>\n                    </div>\n                    <div className = \"flex-shrink-0 ml-3\">\n                        <button onClick = {remove} className = \"remove centered flex cursor-pointer items-center\">\n                            <Minus/>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </StyledNomination>\n     );\n}\n \nexport default Nomination;","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/context/NominationContext.js",["176","177"],"import React, { useState } from 'react';\nimport _ from 'lodash';\nimport NotificationTypes from '../constants/notification-type';\nimport { useNotificationContext } from './NotificationContext';\nimport { NOMINATIONS } from '../constants/general';\n\nconst Context = React.createContext();\nconst MAX_NOMINATIONS = 5;\n\nconst nominationsFromLocalStorage = localStorage.getItem(NOMINATIONS);\n\nconsole.log({nominationsFromLocalStorage})\n\nconst NominationContext = ({children, showBadge}) => {\n    const [ nominations, setNominations ] = useState( nominationsFromLocalStorage ? JSON.parse(nominationsFromLocalStorage) : []);\n    const { addNotification } = useNotificationContext();\n\n    const addNomination = React.useCallback((movie)=>{\n        if(nominations.length < MAX_NOMINATIONS){\n            setNominations(nominations=>\n                _.uniqBy([...nominations,movie], movie=>movie.imdbID)\n            )\n        }else{\n            addNotification(\n                NotificationTypes.INFO, \n                \"Maximum nominations reached!\",\n                `You have added the maximum (${MAX_NOMINATIONS}) nominations`\n            )\n        }\n    },[nominations])\n\n    const removeNomination = React.useCallback((nominationId)=>{\n        let nominationIndex = \n        nominations.findIndex((nomination)=>nomination.imdbID === nominationId);\n        if(nominationIndex !== -1){\n            let newNominations = [...nominations];\n            newNominations.splice(nominationIndex,1);\n            setNominations(newNominations)\n        }\n    },[nominations])\n\n    React.useEffect(()=>{\n        if(nominations.length === MAX_NOMINATIONS){\n            showBadge();\n        }\n        localStorage.setItem(NOMINATIONS,JSON.stringify(nominations))\n    },[nominations])\n\n    return ( \n        <Context.Provider value = {{\n            nominations,\n            addNomination,\n            removeNomination\n        }}>\n            { children }\n        </Context.Provider>\n     );\n}\n\nconst useNominationContext = ()=>React.useContext(Context);\n \nexport { NominationContext as default, useNominationContext };","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledMoviePage.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledHomePage.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledSearchPage.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledNominationsPage.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/context/NotificationContext.js",["178"],"import React, { useState } from 'react';\nimport NotificationType from '../constants/notification-type';\n\nconst Context = React.createContext();\n\nconst NotificationContext = ({children}) => {\n    const [ notifications, setNotifications ] = useState([]);\n\n    const addNotification = React.useCallback((type, title, message)=>{\n        setNotifications(notifications=>[...notifications,\n        {\n            id: `${Date.now()}${notifications.length}`,\n            type,\n            title,\n            message\n        }])\n    },[])\n\n    const removeNotification = React.useCallback((notificationId)=>{\n        let notificationIndex = notifications\n        .findIndex(notification=>notification.id === notificationId);\n\n        let copy = [...notifications];\n\n        if( notificationIndex !== -1){\n            copy.splice(notificationIndex,1);\n            setNotifications(copy)\n        }\n\n    },[notifications])\n\n    return ( \n        <Context.Provider value = {{\n            notifications,\n            addNotification,\n            removeNotification\n        }}>\n            { children }\n        </Context.Provider>\n     );\n}\n\nconst useNotificationContext = ()=>React.useContext(Context);\n \nexport { NotificationContext as default, useNotificationContext };","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledBadge.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledNotifications.js",["179"],"import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledNotifications = styled.div`\n    position: fixed;\n    width:100vw;\n    max-width: 400px;\n    bottom: 0;\n    right: 0;\n    z-index: 200;\n    pointer-events:none;\n    padding:20px 16px;\n    display: flex;\n    flex-direction: column;\n    row-gap:10px;\n`;\n\nexport default StyledNotifications;","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/components/Notification.js",["180"],"import React from 'react';\nimport { Check, Info, X } from 'react-feather';\nimport NotificationType from '../constants/notification-type';\nimport { useNotificationContext } from '../context/NotificationContext';\nimport StyledNotification from '../styled/StyledNotification';\n\nconst Notification = ({ notification }) => {\n    const { type, title, message, id } = notification;\n    const { removeNotification } = useNotificationContext();\n\n    React.useEffect(()=>{\n        let timeout = setTimeout(()=>{\n            removeNotification(id)\n        },3000);\n        return ()=>{\n            timeout && clearTimeout(timeout);\n        }\n    },[])\n\n    const Icon = React.useMemo(()=>{\n        switch(type){\n            case NotificationType.SUCCESS:\n                return Check;\n            case NotificationType.ERROR:\n                return X;\n            case NotificationType.INFO:\n                return Info\n            default:\n                return Check\n        }\n    },[type]);\n\n    const color = React.useMemo(()=>{\n        switch(type){\n            case NotificationType.SUCCESS:\n                return \"#5cb85c\";\n            case NotificationType.ERROR:\n                return \"#d9534f\";\n            case NotificationType.INFO:\n                return \"#5bc0de\"\n            default:\n                return \"#5cb85c\"\n        }\n    },[type])\n\n    return ( \n        <StyledNotification className = \"flex\">\n            <div>\n                <Icon color = {color} size = {30}/>\n            </div>\n            <div className = \"ml-2 flex justify-between flex-grow\">\n                <div>\n                    <h3>\n                        {\n                            title\n                        }\n                    </h3>\n                    <p>\n                        {\n                            message\n                        }\n                    </p>\n                </div>\n                <div className = \"ml-1\">\n                    <span onClick = {()=>removeNotification(id)}>\n                        <X size = {18} color = \"#d7d8d9\"/>\n                    </span>\n                </div>\n            </div>\n        </StyledNotification>\n    );\n}\n \nexport default Notification;","/Users/decagon/Documents/MY PROJECTS/FontendTask/src/services/movies-services.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledMoviesSkeleton.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledMovie.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledNetError.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledPageLayout.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledNomination.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/constants/general.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/constants/notification-type.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/styled/StyledNotification.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/utils/styled-utils.js",[],"/Users/decagon/Documents/MY PROJECTS/FontendTask/src/svg/index.js",[],{"ruleId":"181","severity":1,"message":"182","line":10,"column":8,"nodeType":"183","messageId":"184","endLine":10,"endColumn":13},{"ruleId":"185","severity":1,"message":"186","line":26,"column":7,"nodeType":"187","endLine":26,"endColumn":9,"suggestions":"188"},{"ruleId":"185","severity":1,"message":"186","line":23,"column":7,"nodeType":"187","endLine":23,"endColumn":9,"suggestions":"189"},{"ruleId":"185","severity":1,"message":"190","line":32,"column":7,"nodeType":"187","endLine":32,"endColumn":20,"suggestions":"191"},{"ruleId":"185","severity":1,"message":"186","line":36,"column":7,"nodeType":"187","endLine":36,"endColumn":9,"suggestions":"192"},{"ruleId":"181","severity":1,"message":"193","line":12,"column":24,"nodeType":"183","messageId":"184","endLine":12,"endColumn":31},{"ruleId":"185","severity":1,"message":"194","line":31,"column":7,"nodeType":"187","endLine":31,"endColumn":38,"suggestions":"195"},{"ruleId":"185","severity":1,"message":"186","line":15,"column":7,"nodeType":"187","endLine":15,"endColumn":15,"suggestions":"196"},{"ruleId":"181","severity":1,"message":"197","line":3,"column":10,"nodeType":"183","messageId":"184","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":14,"column":7,"nodeType":"187","endLine":14,"endColumn":15,"suggestions":"198"},{"ruleId":"185","severity":1,"message":"199","line":30,"column":7,"nodeType":"187","endLine":30,"endColumn":20,"suggestions":"200"},{"ruleId":"185","severity":1,"message":"201","line":47,"column":7,"nodeType":"187","endLine":47,"endColumn":20,"suggestions":"202"},{"ruleId":"181","severity":1,"message":"203","line":2,"column":8,"nodeType":"183","messageId":"184","endLine":2,"endColumn":24},{"ruleId":"181","severity":1,"message":"204","line":1,"column":8,"nodeType":"183","messageId":"184","endLine":1,"endColumn":13},{"ruleId":"185","severity":1,"message":"205","line":18,"column":7,"nodeType":"187","endLine":18,"endColumn":9,"suggestions":"206"},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["207"],["208"],"React Hook React.useCallback has an unnecessary dependency: 'searchQuery'. Either exclude it or remove the dependency array.",["209"],["210"],"'isError' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'Year'. Either include it or remove the dependency array.",["211"],["212"],"'Link' is defined but never used.",["213"],"React Hook React.useCallback has a missing dependency: 'addNotification'. Either include it or remove the dependency array.",["214"],"React Hook React.useEffect has a missing dependency: 'showBadge'. Either include it or remove the dependency array. If 'showBadge' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["215"],"'NotificationType' is defined but never used.","'React' is defined but never used.","React Hook React.useEffect has missing dependencies: 'id' and 'removeNotification'. Either include them or remove the dependency array.",["216"],{"desc":"217","fix":"218"},{"desc":"217","fix":"219"},{"desc":"220","fix":"221"},{"desc":"217","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"225","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [history]",{"range":"234","text":"235"},{"range":"236","text":"235"},"Update the dependencies array to be: []",{"range":"237","text":"238"},{"range":"239","text":"235"},"Update the dependencies array to be: [response.data, Year, addNomination]",{"range":"240","text":"241"},"Update the dependencies array to be: [history, imdbID]",{"range":"242","text":"243"},{"range":"244","text":"243"},"Update the dependencies array to be: [addNotification, nominations.length]",{"range":"245","text":"246"},"Update the dependencies array to be: [nominations, showBadge]",{"range":"247","text":"248"},"Update the dependencies array to be: [id, removeNotification]",{"range":"249","text":"250"},[994,996],"[history]",[871,873],[1100,1113],"[]",[1214,1216],[1140,1171],"[response.data, Year, addNomination]",[561,569],"[history, imdbID]",[525,533],[1145,1158],"[addNotification, nominations.length]",[1743,1756],"[nominations, showBadge]",[637,639],"[id, removeNotification]"]